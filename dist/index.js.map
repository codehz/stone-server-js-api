{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { spawn, ChildProcess } from \"child_process\";\nimport { AStream, makeAStream } from \"./AStream\";\nimport * as path from \"path\";\n\nconst base = process.env.STONE_SERVER_BASE || path.join(__dirname, \"..\");\n\nexport type gen_callback<T> = (this: ChildProcess, data: T) => void;\nexport interface StandardError {\n  code: number | null;\n  signal: string | null;\n  log: string;\n}\nfunction makeStandardError(\n  code: number | null,\n  signal: string | null,\n  log: string\n): StandardError {\n  return { code, signal, log };\n}\nexport const TimeoutError = Symbol(\"timeout\");\n\nexport function readonly_api(\n  name: string,\n  {\n    out,\n    err,\n    exit\n  }: {\n    out: gen_callback<Buffer>;\n    err: gen_callback<Buffer>;\n    exit?: gen_callback<{ code: number | null; signal: string | null }>;\n  }\n): ChildProcess {\n  const proc = spawn(\"./wrapper\", [`./dbus-api-${name}`], {\n    cwd: base,\n    stdio: [\"ignore\", \"pipe\", \"pipe\"]\n  });\n  proc.stdout.on(\"data\", out);\n  proc.stderr.on(\"data\", err);\n  proc.once(\"exit\", (code, signal) => {\n    if (exit) exit.call(proc, { code, signal });\n    proc.stdout.destroy();\n    proc.stderr.destroy();\n  });\n  return proc;\n}\n\nexport function oneway_api(\n  name: string,\n  {\n    params,\n    err,\n    exit\n  }: {\n    params: string[];\n    err: gen_callback<Buffer>;\n    exit?: gen_callback<{ code: number | null; signal: string | null }>;\n  }\n): ChildProcess {\n  const proc = spawn(\"./wrapper\", [`./dbus-api-${name}`, ...params], {\n    cwd: base,\n    stdio: [\"ignore\", \"ignore\", \"pipe\"]\n  });\n  proc.stderr.on(\"data\", err);\n  proc.once(\"exit\", (code, signal) => {\n    if (exit) exit.call(proc, { code, signal });\n    proc.stderr.destroy();\n  });\n  return proc;\n}\n\nexport interface User {\n  name: string;\n  uuid: string;\n  xuid: string;\n}\n\nexport interface Userlist {\n  size: number;\n  list: Array<User>;\n}\n\nexport function fetch_userlist(timeout: number = 1000): Promise<Userlist> {\n  return new Promise<Userlist>((resolve, reject) => {\n    let log = \"\";\n    let done = false;\n    let timer: NodeJS.Timeout;\n    const proc = readonly_api(\"userlist\", {\n      out(data) {\n        if (done) return;\n        resolve(JSON.parse(data.toString(\"utf-8\")));\n        done = true;\n        proc.kill(\"SIGKILL\");\n        if (timer) clearTimeout(timer);\n      },\n      err(errinfo) {\n        log += errinfo.toString(\"utf-8\");\n      },\n      exit({ code, signal }) {\n        if (!done) reject(makeStandardError(code, signal, log));\n      }\n    });\n    timer = setTimeout(() => {\n      if (!done) proc.kill(\"SIGKILL\");\n    }, timeout);\n  });\n}\n\nfunction procList<T>(data: Buffer): Array<T> {\n  return data\n    .toString(\"utf-8\")\n    .split(\"\\n\")\n    .filter(x => x)\n    .map(x => JSON.parse(x));\n}\n\nfunction makeStandardMonitorFn<T>(\n  name: string\n): () => AsyncIterableIterator<T> {\n  return () => {\n    const stream = makeAStream<T>(() => {});\n    let log = \"\";\n    readonly_api(name, {\n      out(data) {\n        try {\n          stream.put(...procList<T>(data));\n        } catch (e) {\n          stream.fail(e);\n          this.kill(\"SIGKILL\");\n        }\n      },\n      err(info) {\n        log += info.toString(\"utf-8\");\n      },\n      exit({ code, signal }) {\n        if (signal !== \"SIGKILL\")\n          stream.fail(makeStandardError(code, signal, log));\n      }\n    });\n    return stream;\n  };\n}\n\nexport const monitor_userlist = makeStandardMonitorFn<Userlist>(\"userlist\");\n\ninterface ChatMessage {\n  sender: string;\n  content: string;\n}\n\nexport const monitor_chat = makeStandardMonitorFn<ChatMessage>(\"chat\");\n\nexport interface LogItem {\n  level: number;\n  tag: string;\n  content: string;\n}\n\nexport const monitor_log = makeStandardMonitorFn<LogItem>(\"logger\");\n\nexport function send_chat(\n  sender: string,\n  message: string,\n  timeout: number = 1000\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    let proc: ChildProcess;\n    const timer = setTimeout(() => {\n      reject(TimeoutError);\n      if (proc) proc.kill(\"SIGKILL\");\n    }, timeout);\n    let log = \"\";\n    proc = oneway_api(\"chat-send\", {\n      params: [sender, message],\n      err(info) {\n        log += info.toString(\"utf-8\");\n      },\n      exit({ code, signal }) {\n        if (signal !== \"SIGKILL\") {\n          if (code === 0) clearTimeout(timer);\n          else reject(makeStandardError(code, signal, log));\n        }\n      }\n    });\n  });\n}\n"]}